The Bellman-Ford algorithm solves the single-source shortest-paths problem in
the general case in which edge weights may be negative. Given a weighted, directed graph G = (V, E) with source s and weight function w : E → R, the
Bellman-Ford algorithm returns a boolean value indicating whether or not there is
a negative-weight cycle that is reachable from the source. If there is such a cycle, the algorithm indicates that no solution exists. If there is no such cycle, the
algorithm produces the shortest paths and their weights.
The algorithm uses relaxation, progressively decreasing an estimate d[v] on the
weight of a shortest path from the source s to each vertex v ∈ V until it achieves
the actual shortest-path weight δ(s, v). The algorithm returns TRUE if and only if
the graph contains no negative-weight cycles that are reachable from the source.
BELLMAN-FORD(G, w,s)
1 INITIALIZE-SINGLE-SOURCE(G,s)
2 for i ← 1 to |V[G]| − 1
3 do for each edge (u, v) ∈ E[G]
4 do RELAX(u, v, w)
5 for each edge (u, v) ∈ E[G]
6 do if d[v] > d[u] + w(u, v)
7 then return FALSE
8 return TRUE